
@{
    ViewData["Title"] = "Propertyhouselisting";
    Layout = "~/Views/Shared/_MasterLayout.cshtml";
}

<div class="row">
    <div class="col-sm-12">
        <div class="card card-outline card-info">
            <div class="card-header py-1">
                <div class="row">
                    <div class="col-sm-8">
                        <h6 class="font-weight-bold text-sm card-title">System Templates</h6>
                    </div>
                    <div class="col-sm-4">
                        <a asp-action="Addhouselisting" asp-controller="Property" asp-route-Houselistingid="0" asp-area="" id="CAN_EDIT_PERMISSION" style="display:none;" class="main btn-info btn-xs btn-outline-info text-white float-right font-weight-bold text-uppercase" data-target="#Uttambsolutionsmodal" data-toggle="modal" data-backdrop="static" data-keyboard="false">Add House</a>
                    </div>
                </div>
            </div>
            <div class="card-body table-responsive table-responsive-sm">
                <table class="table table-bordered table-striped compact table-sm nowrap text-nowrap" id="AllsystemDataTables">
                    <thead class="text-uppercase">
                        <tr>
                            <th>Title</th>
                            <th>Subject</th>
                            <th>Body</th>
                            <th>Isemail</th>
                            <th>Status</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
       
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script src="https://www.gstatic.com/firebasejs/7.20.0/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/7.20.0/firebase-storage.js"></script>
    <script type="text/javascript">
        const firebaseProdConfig = {
            apiKey: "AIzaSyCmRT7WLWSDUAqUmUCNRVlTcZ1ZOPsmgwc",
            authDomain: "uttambsolutions-4ec2a.firebaseapp.com",
            projectId: "uttambsolutions-4ec2a",
            storageBucket: "uttambsolutions-4ec2a.appspot.com",
            messagingSenderId: "336739823411",
            appId: "1:336739823411:web:f2ad2d4dba0f7881f5d846",
            measurementId: "G-Z24LLL0113"
        };

        const firebaseDevConfig = {
            apiKey: "AIzaSyC7PeGxi7RWy6wVOnrGFU9y6Rmz6ejFLiI",
            authDomain: "uttambsolutionsdev.firebaseapp.com",
            projectId: "uttambsolutionsdev",
            storageBucket: "uttambsolutionsdev.appspot.com",
            messagingSenderId: "629286721346",
            appId: "1:629286721346:web:25a76122562d4630639adb",
            measurementId: "G-W3W3KJ6SGH"
        };

        // Check the environment passed from the server
        const environment = "@ViewBag.Environment";
        const firebaseConfig = environment === 'Production' ? firebaseProdConfig : firebaseDevConfig;

        firebase.initializeApp(firebaseConfig);
        var storage = firebase.storage();

        function systemHousePropertyFileChanged(event) {
            var files = event.target.files;
            uploadHousePropertyImage(files);
        }


        async function uploadHousePropertyImage(files) {
            var downloadURLs = [];

            function generateBlogFileName(file) {
                var uniqueId = Date.now();
                var fileExtension = file.name.split('.').pop();
                var newFileName = 'JCM/BlogImages/' + uniqueId + '.' + fileExtension;
                return newFileName;
            }

            async function uploadHousePropertyFile(file) {
                return new Promise((resolve, reject) => {
                    var newFileName = generateBlogFileName(file);

                    var storageRef = storage.ref().child(newFileName);
                    var uploadTask = storageRef.put(file);

                    uploadTask.on('state_changed',
                        function (snapshot) {
                            var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;
                            console.log('Upload is ' + progress + '% done');
                        },
                        function (error) {
                            reject('Error uploading file: ' + error);
                        },
                        function () {
                            uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {
                                console.log('File available at', downloadURL);
                                downloadURLs.push(downloadURL);
                                resolve(downloadURL);
                            });
                        }
                    );
                });
            }

            function displayChurchEventImagePreview(file) {
                return new Promise((resolve, reject) => {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        var previewContainer = document.createElement('div');
                        previewContainer.classList.add('image-preview');

                        var spinner = document.createElement('div');
                        spinner.classList.add('spinner');
                        previewContainer.appendChild(spinner);

                        var previewContainerElement = document.getElementById('Uttambsolutionsimagespreviewcontainer');
                        previewContainerElement.appendChild(previewContainer);

                        var img = document.createElement('img');
                        img.src = e.target.result;
                        img.width = 140;
                        img.height = 140;
                        img.style.display = 'none';
                        img.onload = function () {
                            spinner.remove();
                            img.style.display = 'block';
                            previewContainer.appendChild(img);
                        };

                        resolve();
                    };
                    reader.readAsDataURL(file);
                });
            }

            document.getElementById('loadingOverlay').style.zIndex = 1100;
            document.getElementById('loadingOverlay').style.display = 'flex';

            for (var i = 0; i < files.length; i++) {
                var file = files[i];

                try {
                    await displayChurchEventImagePreview(file);
                    var downloadURL = await uploadHousePropertyFile(file);
                } catch (error) {
                    console.error(error);
                }
            }

            document.getElementById('loadingOverlay').style.display = 'none';

            var inputField = document.getElementById('UttambsolutionsimageurlId');
            inputField.value = JSON.stringify(downloadURLs);
        }

        function Savesystemcommunicationtemplatedata() {
            if ($('#SystemcommtemplatemoduleId').val() == '' || $('#SystemcommtemplatemoduleId').val() == 0) {
                Swal.fire("Communication Template Not Created", 'Module is Required', "warning");
                return;
            }
            var uil1 = {
                Templateid: $('#SystemcommTemplateId').val(), Templatename: $('#SystemcommtemplatenameId').val(), Templatesubject: $('#SystemcommtemplatesubjectId').val(),
                Isemailsms: $('#SystemcommtemplateisemailsmsId').is(':checked'), Templatebody: $('#SystemcommtemplatebodyId').val()
            };
            $.post("/Settings/Addcommunicationtemplatedata", uil1, function (response) {
                if (response.RespStatus == 0) {
                    Swal.fire('Saved!', response.RespMessage, 'success')
                    $('#Uttambsolutionsmodalpdate').hide();
                    setTimeout(function () { location.reload(); }, 1000);
                } else if (response.RespStatus == 1) {
                    Swal.fire("Communication templates details not saved", response.RespMessage, "warning");
                }
                else {
                    Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                }
            });
        }
    </script>
}