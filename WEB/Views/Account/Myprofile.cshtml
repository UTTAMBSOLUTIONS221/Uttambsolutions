@model DBL.Models.UsermodeldataResponce
@functions {
    private string GetApplicationStatus(int status)
    {
        switch (status)
        {
            case 3:
                return "Received";
            case 2:
                return "Viewed";
            case 1:
                return "Rejected";
            case 0:
                return "Approved";
            default:
                return "Unknown";
        }
    }
}
@{
    Layout = null;
    var profileImageUrl = Model.UserProfileImageUrl;
    var defaultImageUrl = Url.Content("~/images/user.png");
    var imageUrl = !string.IsNullOrEmpty(profileImageUrl) ? Url.Content(profileImageUrl) : defaultImageUrl;
      string GetRelativeDate(DateTime date)
    {
        var now = DateTime.Now;
        var timeSpan = now - date;

        if (timeSpan.TotalDays < 1)
        {
            return "Today";
        }
        else if (timeSpan.TotalDays < 2)
        {
            return "Yesterday";
        }
        else
        {
            var days = (int)timeSpan.TotalDays;
            return $"{days} day{(days > 1 ? "s" : "")} ago";
        }
    }

    int adCounter = 0;
}

@using System.Security.Claims
@using DBL.Models
@using Microsoft.Extensions.Configuration
@{
    bool authenticated = false;
    UsermodelResponce currentUserData = null;
    if (User.Identities.Any(u => u.IsAuthenticated))
    {
        authenticated = true;
        currentUserData = Util.GetCurrentUserData(User.Identities);
        IConfiguration config = (IConfiguration)Context.RequestServices.GetService(typeof(IConfiguration));
    }
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>

    <meta name="description" content="JobCenter offers the latest job listings, freelancing job biddings, and career opportunities. Stay informed and find your next job with our comprehensive job board." />
    <meta name="keywords" content="JobCenter, job listings, freelancing, job biddings, career opportunities, job board" />
    <meta name="author" content="JobCenter" />
    <meta name="google-adsense-account" content="ca-pub-2850934153859537">

    <!-- Open Graph Meta Tags -->
    <meta property="og:title" content="@ViewData["Title"] - JobCenter" />
    <meta property="og:description" content="JobCenter provides the latest job listings, freelancing job biddings, and career opportunities. Explore our platform to find your next job." />
    <meta property="og:image" content="https://jobcenter.uttambsolutions.com/images/jobcenterlogo.png" />
    <meta property="og:url" content="https://jobcenter.uttambsolutions.com" />
    <meta property="og:type" content="website" />

    <!-- Twitter Meta Tags -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content="@ViewData["Title"] - JobCenter" />
    <meta name="twitter:description" content="JobCenter offers job listings, freelancing job biddings, and career opportunities. Stay connected and find your next job with our platform." />
    <meta name="twitter:image" content="https://jobcenter.uttambsolutions.com/images/jobcenterlogo.png" />

    <!-- Schema.org Markup -->
    <meta itemprop="name" content="@ViewData["Title"] - JobCenter" />
    <meta itemprop="description" content="JobCenter provides the latest job listings, freelancing job biddings, and career opportunities." />
    <meta itemprop="image" content="https://jobcenter.uttambsolutions.com/images/jobcenterlogo.png" />

    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback">
    <link href="~/lib/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="~/lib/plugins/fontawesome-free/css/all.min.css" rel="stylesheet" />
    <link href="~/lib/plugins/select2/css/select2.min.css" rel="stylesheet" />
    <link href="~/lib/plugins/select2-bootstrap4-theme/select2-bootstrap4.min.css" rel="stylesheet" />
    <link href="~/lib/plugins/sweetalert2-theme-bootstrap-4/bootstrap-4.min.css" rel="stylesheet" />
    <link href="~/lib/plugins/bs-stepper/css/bs-stepper.min.css" rel="stylesheet" />
    <link href="~/lib/plugins/datatables-bs4/css/datatables.bootstrap4.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/lib/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
    <link href="~/lib/plugins/datatables-buttons/css/buttons.bootstrap4.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/lib/plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
    <link href="~/dist/css/adminlte.min.css" rel="stylesheet" />
    <link href="~/css/site.css" rel="stylesheet" />
     <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-2850934153859537"
            crossorigin="anonymous"></script>
    <script async src="https://fundingchoicesmessages.google.com/i/pub-2850934153859537?ers=1" nonce="dDYKvq_VdPZaU6r2X5lJmw"></script>
    <script nonce="dDYKvq_VdPZaU6r2X5lJmw">(function () { function signalGooglefcPresent() { if (!window.frames['googlefcPresent']) { if (document.body) { const iframe = document.createElement('iframe'); iframe.style = 'width: 0; height: 0; border: none; z-index: -1000; left: -1000px; top: -1000px;'; iframe.style.display = 'none'; iframe.name = 'googlefcPresent'; document.body.appendChild(iframe); } else { setTimeout(signalGooglefcPresent, 0); } } } signalGooglefcPresent(); })();</script>

            <style type="text/css">
        textarea {
            resize: none;
        }
        /* Hide spinner arrows for number inputs */
        input[type=number]::-webkit-inner-spin-button,
        input[type=number]::-webkit-outer-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }

        input[type=number] {
            -moz-appearance: textfield; /* Firefox */
        }

        .no-wrap-buttons {
            display: flex;
            flex-wrap: nowrap;
            gap: 5px; /* Adjust the gap as needed */
        }

            .no-wrap-buttons a {
                white-space: nowrap;
            }

    </style>
</head>

<body class="hold-transition sidebar-mini bg-custom layout-fixed layout-navbar-fixed layout-footer-fixed">
    <div class="wrapper">
        <nav class="main-header navbar navbar-expand bg-custom">
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars text-white"></i></a>
                </li>
            </ul>
            <ul class="nav-item order-1 order-md-3 navbar-nav navbar-no-expand ml-auto">
                <li class="nav-link dropdown">
                    <a class="font-weight-bold text-uppercase text-xs text-white text-muted dropdown-toggle" data-toggle="dropdown" aria-expanded="false"><i class="fas fa-user-circle text-white text-muted font-weight-bold fa-1x img-circle rounded-circle"></i>&nbsp; @currentUserData.Usermodel.Fullname</a>
                    <div class="dropdown-menu bg-custom">
                        <a asp-area="" asp-controller="Account" asp-action="Logout" class="dropdown-item text-white text-sm font-weight-bold"> Log out</a>
                    </div>
                </li>
            </ul>
        </nav>

        <aside class="main-sidebar sidebar-white bg-custom position-fixed">
            <a asp-controller="Account" asp-action="Myprofile" class="brand-link">
                <img src="~/images/uttambsolutionlogo.png" alt="Uttambsolutions Logo" class="brand-image">
                <span class="brand-text text-white font-weight-bold">UTTAMB SOLUTIONS</span>
            </a>
             <div class="sidebar bg-white" style="height: calc(100vh - 56px); overflow-y: auto;">
                 <div class="box-profile">
                    <div class="text-center position-relative">
                        <img src="@imageUrl" class="profile-user-img img-fluid img-circle" alt="@Model.Fullname" />
                        <input type="file" id="imageUpload" style="display: none;" accept="image/*" onchange="systemuserprofileeditimagechanged(event)" />
                        <button class="position-absolute top-0 end-0 p-1" style="margin: 10px; border: none; background: transparent; cursor: pointer; transform: translate(50%, -50%);" onclick="triggerFileInput()">
                            <i class="fas fa-camera"></i>
                        </button>
                    </div>
                    <h3 class="profile-username text-center">@Model.Fullname</h3>
                 </div>
             </div>
        </aside>
         <div class="content-wrapper">
            <section class="content">
                <div class="container-fluid text-sm font-weight-light text-dark">
                      <div class="row mb-4">
                        <div class="col-lg-12 col-md-12">
                          <div class="row">
                              <div class="col-md-12">
                                <div id="job-list"></div>
                                <nav aria-label="Page navigation">
                                    <ul class="pagination" id="pagination-controls"></ul>
                                </nav>
                              </div>
                          </div>
                        </div>
                    </div>
                </div>
            </section>
        </div>
        
        <footer class="main-footer text-center bg-light">
            <p class="text-xs font-weight-normal">&copy; 2020 - @DateTime.Now.Year . All rights reserved.</p>
        </footer>
   
        <div class="modal modal- fade" id="Uttambsolutionsmodalextralarge" tabindex="-1">
            <div class="modal-dialog modal-xl" role="document">
                <div class="modal-content">
                </div>
            </div>
        </div>
        <div class="modal modal- fade" id="Uttambsolutionsmodallarge" tabindex="-1">
            <div class="modal-dialog modal-lg" role="document">
                <div class="modal-content">
                </div>
            </div>
        </div>
        <div class="modal fade" id="Uttambsolutionsmodal" tabindex="-1">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                </div>
            </div>
        </div>
        <!-- Overlay for loading spinner -->
        <div id="loadingOverlay" class="overlay">
            <div class="spinner"></div>
        </div>

    </div>
    <script src="~/lib/plugins/jquery/jquery.min.js"></script>
    <script src="~/lib/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="~/lib/plugins/select2/js/select2.full.min.js"></script>
    <script src="~/lib/plugins/datatables/jquery.dataTables.min.js"></script>
    <script src="~/lib/plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>
    <script src="~/lib/plugins/datatables-buttons/js/datatables.buttons.min.js"></script>
    <script src="~/lib/plugins/datatables-responsive/js/dataTables.responsive.min.js"></script>
    <script src="~/lib/plugins/datatables-responsive/js/responsive.bootstrap4.min.js"></script>
    <script src="~/lib/plugins/sweetalert2/sweetalert2.min.js"></script>
    <script src="~/lib/plugins/pdfmake/pdfmake.min.js"></script>
    <script src="~/lib/plugins/pdfmake/vfs_fonts.js"></script>
    <script src="~/dist/js/adminlte.min.js"></script>
    <script src="https://www.gstatic.com/firebasejs/7.20.0/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/7.20.0/firebase-storage.js"></script>
    <script type="text/javascript">
            let currentSection = 1;

            function showSection(sectionNumber) {
                const sections = document.querySelectorAll('.section');
                sections.forEach((section, index) => {
                    section.style.display = 'none';
                    if (index === sectionNumber - 1) {
                        section.style.display = 'block';
                    }
                });

                // Show/hide the save button and navigation buttons
                const navigationButtons = document.getElementById('navigationButtons');
                const saveButton = document.querySelector('#section' + sectionNumber + ' .btn-info');
                if (sectionNumber === sections.length) {
                    if (saveButton) saveButton.style.display = 'block';
                    if (navigationButtons) navigationButtons.classList.add('d-none');
                } else {
                    if (saveButton) saveButton.style.display = 'none';
                    if (navigationButtons) navigationButtons.classList.remove('d-none');
                }
            }

            function validateSection(sectionNumber) {
                const section = document.querySelector('#section' + sectionNumber);
                const inputs = section.querySelectorAll('input[required], select[required], textarea[required]');
                let isValid = true;
                inputs.forEach(input => {
                    if (!input.value.trim()) {
                        input.classList.add('is-invalid');
                        isValid = false;
                    } else {
                        input.classList.remove('is-invalid');
                    }
                });
                return isValid;
            }

            function nextSection() {
                if (validateSection(currentSection)) {
                    const sections = document.querySelectorAll('.section');
                    if (currentSection < sections.length) {
                        currentSection++;
                        showSection(currentSection);
                    }
                }
            }

            function prevSection() {
                if (currentSection > 1) {
                    currentSection--;
                    showSection(currentSection);
                }
            }

            document.addEventListener('DOMContentLoaded', () => {
                showSection(currentSection);
            });

            $('#Uttambsolutionsmodalextralarge').on('show.bs.modal', function (event) {
                $(".blockoverlay").show();
                var button = $(event.relatedTarget);
                var url = button.attr("href");
                var modal = $(this);
                modal.find('.modal-content').load(url, function () {
                    // After the content is loaded, find the dropdowns and apply Select2
                    modal.find('.modal-content select.select2').each(function () {
                        $(this).select2({
                            placeholder: "--Select--",
                            allowClear: true,
                            dropdownAutoWidth: true,
                            minimumResultsForSearch: 1 // Show search box when there is 1 or more items
                            // Add any other options you need
                        }); // Initialize Select2
                    });
                    $("#AllsystemDataTables").DataTable();
                    $("#AllsystemDataTables1").DataTable();
                    $("#AllsystemDataTables2").DataTable();
                    $("#AllsystemDataTables3").DataTable();
                    $("#AllsystemDataTables4").DataTable();
                    $(".blockoverlay").hide();
                });
            });
            $('#Uttambsolutionsmodalextralarge').on('hidden.bs.modal', function () {
                $(this).removeData('bs.modal');
                $('.modal-backdrop').remove();
                $('#Uttambsolutionsmodalextralarge .modal-content').empty();
            });

            $('#Uttambsolutionsmodallarge').on('show.bs.modal', function (event) {
                $(".blockoverlay").show();
                var button = $(event.relatedTarget);
                var url = button.attr("href");
                var modal = $(this);
                modal.find('.modal-content').load(url, function () {
                    // After the content is loaded, find the dropdowns and apply Select2
                    modal.find('.modal-content select.select2').each(function () {
                        $(this).select2({
                            placeholder: "--Select--",
                            allowClear: true,
                            dropdownAutoWidth: true,
                            minimumResultsForSearch: 1 // Show search box when there is 1 or more items
                            // Add any other options you need
                        }); // Initialize Select2
                    });
                    $("#AllsystemDataTables10").DataTable();
                    $("#AllsystemDataTables11").DataTable();
                    $("#AllsystemDataTables12").DataTable();
                    $("#AllsystemDataTables13").DataTable();
                    $("#AllsystemDataTables14").DataTable();
                    $(".blockoverlay").hide();
                });
            });
            $('#Uttambsolutionsmodallarge').on('hidden.bs.modal', function () {
                $(this).removeData('bs.modal');
                $('.modal-backdrop').remove();
                $('#Uttambsolutionsmodallarge .modal-content').empty();
            });

            $('#Uttambsolutionsmodal').on('show.bs.modal', function (event) {
                $(".blockoverlay").show();
                var button = $(event.relatedTarget);
                var url = button.attr("href");
                var modal = $(this);
                modal.find('.modal-content').load(url, function () {
                    // After the content is loaded, find the dropdowns and apply Select2
                    modal.find('.modal-content select.select2').each(function () {
                        $(this).select2({
                            placeholder: "--Select--",
                            allowClear: true,
                            dropdownAutoWidth: true,
                            minimumResultsForSearch: 1 // Show search box when there is 1 or more items
                            // Add any other options you need
                        }); // Initialize Select2
                    });
                    $("#AllsystemDataTables").DataTable();
                    $("#AllsystemDataTables1").DataTable();
                    $("#AllsystemDataTables2").DataTable();
                    $("#AllsystemDataTables3").DataTable();
                    $("#AllsystemDataTables4").DataTable();
                    $("#SuplierProductsTable").DataTable();
                    $("#ShopProductFeatureTable").DataTable();
                    $("#ShopProductBoxItemTable").DataTable();
                    $(".blockoverlay").hide();
                });
            });
            $('#Uttambsolutionsmodal').on('hidden.bs.modal', function () {
                $(this).removeData('bs.modal');
                $('.modal-backdrop').remove();
                $('#Uttambsolutionsmodal .modal-content').empty();
            });

            $("#AllsystemDataTables").DataTable();
            $("#AllsystemDataTables1").DataTable();
            $("#AllsystemDataTables2").DataTable();
            $("#AllsystemDataTables3").DataTable();
            $("#AllsystemDataTables4").DataTable();
            $("#AllsystemDataTables5").DataTable();
            $("#AllsystemDataTables6").DataTable();
            $("#AllsystemDataTables7").DataTable();
            $("#AllsystemDataTables8").DataTable();
            $("#AllsystemDataTables9").DataTable();
            $("#AllsystemDataTables10").DataTable();
            $("#AllsystemDataTables11").DataTable();
            $("#AllsystemDataTables12").DataTable();
            $("#AllsystemDataTables13").DataTable();
            $("#AllsystemDataTables14").DataTable();
            $("#AllsystemDataTables15").DataTable();
            $("#AllsystemDataTables16").DataTable();
            $("#ShopProductFeatureTable").DataTable();
            $("#ShopProductBoxItemTable").DataTable();

    </script>
      
    <script type="text/javascript">
       // Handle row click
        $('#AllsystemDataTables2 tbody').on('click', 'tr', function(event) {
            // Check if the click originated from the Edit button
            if ($(event.target).closest('a').length === 0) {
                var jobId = $(this).data('jobid');
                var guid = '@Guid.NewGuid()';
                var url = '/Account/Opportunitydetail?code=' + guid + '&Opportunityid=' + jobId;

                // Create a temporary anchor element to hold the URL
                var $tempAnchor = $('<a>')
                    .attr({
                        'href': url,
                        'data-target': '#Uttambsolutionsmodallarge',
                        'data-toggle': 'modal',
                        'data-backdrop': 'static',
                        'data-keyboard': 'false'
                    });

                // Append the anchor to the body, click it to trigger the modal, then remove it
                $('body').append($tempAnchor);
                $tempAnchor.trigger('click');
                $tempAnchor.remove();
            }
        });
    </script>

 
     <script type="text/javascript">
         const firebaseConfig = {
                apiKey: "AIzaSyCmRT7WLWSDUAqUmUCNRVlTcZ1ZOPsmgwc",
                authDomain: "uttambsolutions-4ec2a.firebaseapp.com",
                projectId: "uttambsolutions-4ec2a",
                storageBucket: "uttambsolutions-4ec2a.appspot.com",
                messagingSenderId: "336739823411",
                appId: "1:336739823411:web:f2ad2d4dba0f7881f5d846",
                measurementId: "G-Z24LLL0113"
            };
            firebase.initializeApp(firebaseConfig);
            var storage = firebase.storage();

            function systemJobSupportDocChanged(event) {
                var files = event.target.files;
                uploadJobSupportDocImage(files);
            }

            async function uploadJobSupportDocImage(files) {
                var downloadURLs = [];

                function generateBlogFileName(file) {
                    var uniqueId = Date.now();
                    var fileExtension = file.name.split('.').pop();
                    var newFileName = 'Opportunity/Opportunityimage/' + uniqueId + '.' + fileExtension;
                    return newFileName;
                }

                async function uploadBlogFile(file) {
                    return new Promise((resolve, reject) => {
                        var newFileName = generateBlogFileName(file);

                        var storageRef = storage.ref().child(newFileName);
                        var uploadTask = storageRef.put(file);

                        uploadTask.on('state_changed',
                            function (snapshot) {
                                var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;
                                console.log('Upload is ' + progress + '% done');
                            },
                            function (error) {
                                reject('Error uploading file: ' + error);
                            },
                            function () {
                                uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {
                                    console.log('File available at', downloadURL);
                                    downloadURLs.push(downloadURL);
                                    resolve(downloadURL);
                                });
                            }
                        );
                    });
                }

                function displayBlogImagePreview(file) {
                    return new Promise((resolve, reject) => {
                        var reader = new FileReader();
                        reader.onload = function (e) {
                            var previewContainer = document.createElement('div');
                            previewContainer.classList.add('image-preview');

                            var spinner = document.createElement('div');
                            spinner.classList.add('spinner');
                            previewContainer.appendChild(spinner);

                            var previewContainerElement = document.getElementById('Uttambsolutionsimagespreviewcontainer');
                            previewContainerElement.appendChild(previewContainer);

                            var img = document.createElement('img');
                            img.src = e.target.result;
                            img.width = 140;
                            img.height = 140;
                            img.style.display = 'none';
                            img.onload = function () {
                                spinner.remove();
                                img.style.display = 'block';
                                previewContainer.appendChild(img);
                            };

                            resolve();
                        };
                        reader.readAsDataURL(file);
                    });
                }

                document.getElementById('loadingOverlay').style.zIndex = 1100; 
                document.getElementById('loadingOverlay').style.display = 'flex';

                for (var i = 0; i < files.length; i++) {
                    var file = files[i];

                    try {
                        await displayBlogImagePreview(file);
                        var downloadURL = await uploadBlogFile(file);
                    } catch (error) {
                        console.error(error);
                    }
                }

                document.getElementById('loadingOverlay').style.display = 'none';

                var inputField = document.getElementById('UttambsolutionsimageurlId');
                inputField.value = JSON.stringify(downloadURLs);
            }
   
                        
          function systemorganizationcompanychanged(event) {
                var files = event.target.files;
                uploadorganizationcompanyimage(files);
            }

            async function uploadorganizationcompanyimage(files) {
                var downloadURLs = [];

                function generateorganizationcompanyfilename(file) {
                    var uniqueId = Date.now();
                    var fileExtension = file.name.split('.').pop();
                    var newFileName = 'Orgcompany/Orgcompanyimage/' + uniqueId + '.' + fileExtension;
                    return newFileName;
                }

                async function uploadBlogFile(file) {
                    return new Promise((resolve, reject) => {
                        var newFileName = generateorganizationcompanyfilename(file);

                        var storageRef = storage.ref().child(newFileName);
                        var uploadTask = storageRef.put(file);

                        uploadTask.on('state_changed',
                            function (snapshot) {
                                var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;
                                console.log('Upload is ' + progress + '% done');
                            },
                            function (error) {
                                reject('Error uploading file: ' + error);
                            },
                            function () {
                                uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {
                                    console.log('File available at', downloadURL);
                                    downloadURLs.push(downloadURL);
                                    resolve(downloadURL);
                                });
                            }
                        );
                    });
                }

                function displayorganisationcompanyimagepreview(file) {
                    return new Promise((resolve, reject) => {
                        var reader = new FileReader();
                        reader.onload = function (e) {
                            var previewContainer = document.createElement('div');
                            previewContainer.classList.add('image-preview');

                            var spinner = document.createElement('div');
                            spinner.classList.add('spinner');
                            previewContainer.appendChild(spinner);

                            var previewContainerElement = document.getElementById('Uttambsolutionsimagespreviewcontainer');
                            previewContainerElement.appendChild(previewContainer);

                            var img = document.createElement('img');
                            img.src = e.target.result;
                            img.width = 140;
                            img.height = 140;
                            img.style.display = 'none';
                            img.onload = function () {
                                spinner.remove();
                                img.style.display = 'block';
                                previewContainer.appendChild(img);
                            };

                            resolve();
                        };
                        reader.readAsDataURL(file);
                    });
                }

                document.getElementById('loadingOverlay').style.zIndex = 1100; 
                document.getElementById('loadingOverlay').style.display = 'flex';

                for (var i = 0; i < files.length; i++) {
                    var file = files[i];

                    try {
                        await displayorganisationcompanyimagepreview(file);
                        var downloadURL = await uploadBlogFile(file);
                    } catch (error) {
                        console.error(error);
                    }
                }

                document.getElementById('loadingOverlay').style.display = 'none';

                var inputField = document.getElementById('UttambsolutionsimageurlId');
                inputField.value = JSON.stringify(downloadURLs);
            }   
            
            function triggerFileInput() {
                // Trigger the file input click event
                document.getElementById('imageUpload').click();
            }

            function systemuserprofileeditimagechanged(event) {
                var files = event.target.files;
                uploaduserprofileeditimage(files);
            }

             async function uploaduserprofileeditimage(files) {
                var downloadURLs = [];

                function generateuserprofileeditfilename(file) {
                    var uniqueId = Date.now();
                    var fileExtension = file.name.split('.').pop();
                    var newFileName = 'Userprofiles/Userprofileimage/' + uniqueId + '.' + fileExtension;
                    return newFileName;
                }

                async function uploaduserprofileeditfile(file) {
                    return new Promise((resolve, reject) => {
                        var newFileName = generateuserprofileeditfilename(file);

                        var storageRef = storage.ref().child(newFileName);
                        var uploadTask = storageRef.put(file);

                        uploadTask.on('state_changed',
                            function (snapshot) {
                                var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;
                                console.log('Upload is ' + progress + '% done');
                            },
                            function (error) {
                                reject('Error uploading file: ' + error);
                            },
                            function () {
                                uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {
                                    console.log('File available at', downloadURL);
                                    downloadURLs.push(downloadURL);
                                    resolve(downloadURL);
                                });
                            }
                        );
                    });
                }

                async function saveprofileimageurltodatabase(url) {
                    var uil1 = {Profileimagelogo: url };
                    $.post("/Account/Updatestaffprofilepicturedata", uil1, function (response) {
                        setTimeout(function () { location.reload(); }, 1000);
                    });
                 }

                document.getElementById('loadingOverlay').style.zIndex = 1100; 
                document.getElementById('loadingOverlay').style.display = 'flex';

                for (var i = 0; i < files.length; i++) {
                    var file = files[i];

                    try {
                        var downloadURL = await uploaduserprofileeditfile(file);
                        await saveprofileimageurltodatabase(downloadURL);
                    } catch (error) {
                        console.error(error);
                    }
                }

                document.getElementById('loadingOverlay').style.display = 'none';
            }   
                        
      </script>
    
    
    @*Scripts for saving the job opportunity*@
        <script type="text/javascript">
             function addsystemjobfunctiondata() {
                 if ($('#SystemjobfunctionId').val() == "") {
                    Swal.fire("Job Function Not Created", 'Function is Required', "warning");
                    return;
                }
                var Jobfunctionid = 0;
                var Jobfunction = $('#SystemjobfunctionId').val();
             
          
                // Check if the table body contains any rows
                var tableFunctionBody = $('#AllsystemDataTables10 tbody');
                var noDataRows = tableFunctionBody.find('tr');
                if (noDataRows.length === 1 && noDataRows.hasClass('odd')) {
                    // Remove the "No data available in table" row
                    tableFunctionBody.empty();
                }
                // Append row to table with image
                var newRow = '<tr>' +
                    '<td hidden>' + Jobfunctionid + '</td>' +
                     '<td>' + Jobfunction + '</td>' +
                    '<td class="text-right">' +
                    '<button class="btn-info btn-xs btn-outline-info text-white font-weight-bold text-uppercase main m-1" onclick="editjobfunctiondata(this.parentNode.parentNode)">Edit</button>' +
                    '<button class="btn-info btn-xs btn-outline-info text-white font-weight-bold text-uppercase main m-1" onclick="updatejobfunctiondata(this.parentNode.parentNode)">Update</button>' +
                    '</td>' +
                    '</tr>';

                $('#AllsystemDataTables10 tbody').append(newRow);
                // Clear the form after adding a new row
                clearJobFunctionForm();
            }
            // Function to populate input fields with values from the selected row for editing
            function editjobfunctiondata(row) {
                var cells = $(row).children();
                $('#Jobfunctionid').val($(cells[0]).text());
                $('#SystemjobfunctionId').val($(cells[1]).text());
            }
            // Function to update the selected row with edited values
            function updatejobfunctiondata(row) {
                if ($('#SystemjobfunctionId').val() == "") {
                    Swal.fire("Job Function Not Created", 'Function is Required', "warning");
                    return;
                }
                var cells = $(row).children(); // Get the cells of the selected row

                // Update the cells with edited values from input fields
                $(cells[0]).text($('#Jobfunctionid').val());
                $(cells[1]).text($('#SystemjobfunctionId').val());
                clearJobFunctionForm();
            }
            // Function to clear the form after adding a new row or updating
            function clearJobFunctionForm() {
                $('#Jobfunctionid').val('');
                $('#SystemjobfunctionId').val('');
            }

            
            function addsystemjobqualificationdata() {
                 if ($('#SystemjobqualificationId').val() == "") {
                    Swal.fire("Job Qualification Not Created", 'Qualification is Required', "warning");
                    return;
                }
                var Jobqualificationid = 0;
                var Jobqualification = $('#SystemjobqualificationId').val();
             
          
                // Check if the table body contains any rows
                var tableQualificationBody = $('#AllsystemDataTables11 tbody');
                var noDataRows = tableQualificationBody.find('tr');
                if (noDataRows.length === 1 && noDataRows.hasClass('odd')) {
                    // Remove the "No data available in table" row
                    tableQualificationBody.empty();
                }
                // Append row to table with image
                var newRow = '<tr>' +
                    '<td hidden>' + Jobqualificationid + '</td>' +
                     '<td>' + Jobqualification + '</td>' +
                    '<td class="text-right">' +
                    '<button class="btn-info btn-xs btn-outline-info text-white font-weight-bold text-uppercase main m-1" onclick="editjobqualificationdata(this.parentNode.parentNode)">Edit</button>' +
                    '<button class="btn-info btn-xs btn-outline-info text-white font-weight-bold text-uppercase main m-1" onclick="updatejobqualificationdata(this.parentNode.parentNode)">Update</button>' +
                    '</td>' +
                    '</tr>';

                $('#AllsystemDataTables11 tbody').append(newRow);
                // Clear the form after adding a new row
                clearJobQualificationForm();
            }
            // Function to populate input fields with values from the selected row for editing
            function editjobqualificationdata(row) {
                var cells = $(row).children();
                $('#Jobqualificationid').val($(cells[0]).text());
                $('#SystemjobqualificationId').val($(cells[1]).text());
            }
            // Function to update the selected row with edited values
            function updatejobqualificationdata(row) {
               if ($('#SystemjobqualificationId').val() == "") {
                    Swal.fire("Job Qualification Not Created", 'Qualification is Required', "warning");
                    return;
                }
                var cells = $(row).children(); // Get the cells of the selected row

                // Update the cells with edited values from input fields
                $(cells[0]).text($('#Jobqualificationid').val());
                $(cells[1]).text($('#SystemjobqualificationId').val());
                clearJobQualificationForm();
            }
            // Function to clear the form after adding a new row or updating
            function clearJobQualificationForm() {
                $('#Jobqualificationid').val('');
                $('#SystemjobqualificationId').val('');
            }


               function addsystemjobskilldata() {
                 if ($('#SystemjobskillnameId').val() == "") {
                    Swal.fire("Job Skill Not Created", 'Skill is Required', "warning");
                    return;
                }
                var JobskillId = 0;
                var JobskillnameId = $('#SystemjobskillnameId').val();
             
          
                // Check if the table body contains any rows
                var tableSkillBody = $('#AllsystemDataTables12 tbody');
                var noDataRows = tableSkillBody.find('tr');
                if (noDataRows.length === 1 && noDataRows.hasClass('odd')) {
                    // Remove the "No data available in table" row
                    tableSkillBody.empty();
                }
                // Append row to table with image
                var newRow = '<tr>' +
                    '<td hidden>' + JobskillId + '</td>' +
                     '<td>' + JobskillnameId + '</td>' +
                    '<td class="text-right">' +
                    '<button class="btn-info btn-xs btn-outline-info text-white font-weight-bold text-uppercase main m-1" onclick="editjobskilldata(this.parentNode.parentNode)">Edit</button>' +
                    '<button class="btn-info btn-xs btn-outline-info text-white font-weight-bold text-uppercase main m-1" onclick="updatejobskilldata(this.parentNode.parentNode)">Update</button>' +
                    '</td>' +
                    '</tr>';

                $('#AllsystemDataTables12 tbody').append(newRow);
                // Clear the form after adding a new row
                clearJobSkillsForm();
            }
            // Function to populate input fields with values from the selected row for editing
            function editjobskilldata(row) {
                var cells = $(row).children();
                $('#Jobskillid').val($(cells[0]).text());
                $('#SystemjobskillnameId').val($(cells[1]).text());
            }
            // Function to update the selected row with edited values
            function updatejobskilldata(row) {
                if ($('#SystemjobskillnameId').val() == "") {
                    Swal.fire("Job Skill Not Created", 'Skill is Required', "warning");
                    return;
                }
                var cells = $(row).children(); // Get the cells of the selected row

                // Update the cells with edited values from input fields
                $(cells[0]).text($('#Jobskillid').val());
                $(cells[1]).text($('#SystemjobskillnameId').val());
                clearJobSkillsForm();
            }
            // Function to clear the form after adding a new row or updating
            function clearJobSkillsForm() {
                $('#Jobskillid').val('');
                $('#SystemjobskillnameId').val('');
            }

             function addsystemjobbenfitdata() {
                 if ($('#SystemjobbenefitId').val() == "") {
                    Swal.fire("Job Benefit Not Created", 'Benefit is Required', "warning");
                    return;
                }
                var JobbenefitId = 0;
                var JobbenefitnameId = $('#SystemjobbenefitnameId').val();
             
          
                // Check if the table body contains any rows
                var tableBenefitBody = $('#AllsystemDataTables13 tbody');
                var noDataRows = tableBenefitBody.find('tr');
                if (noDataRows.length === 1 && noDataRows.hasClass('odd')) {
                    // Remove the "No data available in table" row
                    tableBenefitBody.empty();
                }
                // Append row to table with image
                var newRow = '<tr>' +
                    '<td hidden>' + JobbenefitId + '</td>' +
                     '<td>' + JobbenefitnameId + '</td>' +
                    '<td class="text-right">' +
                    '<button class="btn-info btn-xs btn-outline-info text-white font-weight-bold text-uppercase main m-1" onclick="editjobbenefitdata(this.parentNode.parentNode)">Edit</button>' +
                    '<button class="btn-info btn-xs btn-outline-info text-white font-weight-bold text-uppercase main m-1" onclick="updatejobbenefitdata(this.parentNode.parentNode)">Update</button>' +
                    '</td>' +
                    '</tr>';

                $('#AllsystemDataTables13 tbody').append(newRow);
                // Clear the form after adding a new row
                clearJobBenefitForm();
            }
            // Function to populate input fields with values from the selected row for editing
            function editjobbenefitdata(row) {
                var cells = $(row).children();
                $('#JobbenefitId').val($(cells[0]).text());
                $('#SystemjobbenefitnameId').val($(cells[1]).text());
            }
            // Function to update the selected row with edited values
            function updatejobbenefitdata(row) {
                if ($('#SystemjobbenefitId').val() == "") {
                    Swal.fire("Job Benefit Not Created", 'Benefit is Required', "warning");
                    return;
                }
                var cells = $(row).children(); // Get the cells of the selected row

                // Update the cells with edited values from input fields
                $(cells[0]).text($('#JobbenefitId').val());
                $(cells[1]).text($('#SystemjobbenefitnameId').val());
                clearJobBenefitForm();
            }
            // Function to clear the form after adding a new row or updating
            function clearJobBenefitForm() {
                $('#JobbenefitId').val('');
                $('#SystemjobbenefitnameId').val('');
            }



            ﻿function saveopportunitydata() {
                document.getElementById("saveopportunityid").disabled = true;
                document.getElementById("processingSpinner").style.display = "inline-block";
                document.getElementById("buttonText").innerText = "Processing...";
                   var Systemjobfunctionsdata = [];
                   $("#AllsystemDataTables10 tbody tr").each(function () {
                   var row = $(this);
                        var Systemjobfunctiondata = {
                             Jobfunctionid:row.find('td:eq(0)').text(),
                             Jobid:$('#JobId').val(),
                             Jobfunction:row.find('td:eq(1)').text(),
                             Datecreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                        };
                        Systemjobfunctionsdata.push(Systemjobfunctiondata);
                   });

                    //Job Qualification data
                   var Systemjobquaificationsdata = [];
                   $("#AllsystemDataTables11 tbody tr").each(function () {
                   var row = $(this);
                        var Systemjobquaificationdata = {
                             Jobqualificationid:row.find('td:eq(0)').text(),
                             Jobid:$('#JobId').val(),
                             Jobqualification:row.find('td:eq(1)').text(),
                             Datecreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                        };
                        Systemjobquaificationsdata.push(Systemjobquaificationdata);
                   });

                   //Job Qualification data
                   var Systemjobskillsdata = [];
                   $("#AllsystemDataTables12 tbody tr").each(function () {
                   var row = $(this);
                        var Systemjobskilldata = {
                             Jobskillid:row.find('td:eq(0)').text(),
                             Jobid:$('#JobId').val(),
                             Jobskill:row.find('td:eq(1)').text(),
                             Datecreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                        };
                        Systemjobskillsdata.push(Systemjobskilldata);
                   });

                   //Job Benefits data
                   var Systemjobbenefitsdata = [];
                   $("#AllsystemDataTables13 tbody tr").each(function () {
                   var row = $(this);
                        var Systemjobbenefitdata = {
                             Jobbenefitid:row.find('td:eq(0)').text(),
                             Jobid:$('#JobId').val(),
                             Jobbenefit:row.find('td:eq(1)').text(),
                             Datecreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                        };
                        Systemjobbenefitsdata.push(Systemjobbenefitdata);
                   });


                var uil1 = {
                    JobId: $('#JobId').val(),EmployerId: $('#JobEmployerId').val(),Title: $('#Titleid').val(), JobFunctionId: $('#JobFunctionId').val(),JobIndustryId: $('#JobIndustryId').val(), JobLocationId: $('#JobLocationId').val(), JobExperienceId: $('#JobExperienceId').val(),
                    JobTypeId: $('#JobTypeId').val(),EasyApply: $('#EasyApplyid').prop('checked'), HasTest: $('#JobHasTestid').prop('checked'),IsFeatured: $('#IsJobFeaturedid').prop('checked'),JobUrl: $('#JobUrlid').val(),Deadline: $('#Deadlineid').val(),JobSalaryRange: $('#JobSalaryRangeid').val(),JobDescription: $('#JobDescriptionid').val(),CreatedBy: $('#systemLoggedinedUserid').val(),
                    Systemjobfunction:Systemjobfunctionsdata,Systemjobqualification:Systemjobquaificationsdata,Systemjobskill:Systemjobskillsdata,Systemjobbenefit:Systemjobbenefitsdata,Jobreportto:$('#SystemjobreportstoId').val(),Jobhowtoapply:$('#SystemjobhowtoapplyId').val(),Jobimageburl: $('#UttambsolutionsimageurlId').val().replace(/^\[|\]$/g, '').replace(/^"|"$/g, '')
                };
                $.post("/Account/Addsystemopportunitydata", uil1, function (response) {
                    if (response.RespStatus == 0) {
                        Swal.fire('Saved!', response.RespMessage, 'success')
                        $('#Uttambsolutionsmodal').hide();
                        setTimeout(function () { location.reload(); }, 1000);
                    } else if (response.RespStatus == 1) {
                        Swal.fire("Job details not saved", response.RespMessage, "warning");
                    }
                    else {
                        Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                    }
                    document.getElementById("saveopportunityid").disabled = false;
                    document.getElementById("processingSpinner").style.display = "none";
                    document.getElementById("buttonText").innerText = "SAVE";
                });
            }
       </script>
      @*End of saving job opportunity *@

      @*Scripts for saving the organization details*@
      <script type="text/javascript">
        ﻿function savesystemorganizationdata() {
            document.getElementById("savesystemorganizationid").disabled = true;
            document.getElementById("processingSpinner").style.display = "inline-block";
            document.getElementById("buttonText").innerText = "Processing...";
            if ($('#OrganizationNameid').val() === '') {
                Swal.fire("Organization Not Created", 'Organization Name is Required', "warning");
                document.getElementById("savesystemorganizationid").disabled = false;
                document.getElementById("processingSpinner").style.display = "none";
                document.getElementById("buttonText").innerText = "SAVE";
                return;
            }
            if ($('#OrganizationTypeId').val() === ''|| $('#OrganizationTypeId').val() === 0) {
                Swal.fire("Organization Not Created", 'Organization Type is Required', "warning");
                document.getElementById("savesystemorganizationid").disabled = false;
                document.getElementById("processingSpinner").style.display = "none";
                document.getElementById("buttonText").innerText = "SAVE";
                return;
            }
            if ($('#OrganizationPhoneid').val() === '') {
                Swal.fire("Organization Not Created", 'Organization Phone is Required', "warning");
                document.getElementById("savesystemorganizationid").disabled = false;
                document.getElementById("processingSpinner").style.display = "none";
                document.getElementById("buttonText").innerText = "SAVE";
                return;
            }
            if ($('#OrganizationEmailid').val() === '') {
                Swal.fire("Organization Not Created", 'Organization Email is Required', "warning");
                document.getElementById("savesystemorganizationid").disabled = false;
                document.getElementById("processingSpinner").style.display = "none";
                document.getElementById("buttonText").innerText = "SAVE";
                return;
            }

             if ($('#OrganizationDescriptionid').val() === '') {
                Swal.fire("Organization Not Created", 'Organization Description is Required', "warning");
                document.getElementById("savesystemorganizationid").disabled = false;
                document.getElementById("processingSpinner").style.display = "none";
                document.getElementById("buttonText").innerText = "SAVE";
                return;
            }
    
            var uil1 = {
                OrganizationId: $('#OrganizationId').val(),OrganizationOwner: $('#systemLoggedinedUserid').val(), OrganizationName: $('#OrganizationNameid').val(), OrganizationTypeId: $('#OrganizationTypeId').val(),OrganizationPhone:$('#OrganizationPhoneid').val(),OrganizationEmail:$('#OrganizationEmailid').val(), OrganizationDescription: $('#OrganizationDescriptionid').val(),OrganizationStatus:0,DateCreated:new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),OrganizationLogo: $('#UttambsolutionsimageurlId').val().replace(/^\[|\]$/g, '').replace(/^"|"$/g, '')
            };
            $.post("/Account/Addsystemorganizationdata", uil1, function (response) {
                if (response.RespStatus == 0) {
                    Swal.fire('Saved!', response.RespMessage, 'success')
                    $('#Uttambsolutionsmodal').hide();
                    setTimeout(function () { location.reload(); }, 1000);
                } else if (response.RespStatus == 1) {
                    Swal.fire("Organization details not saved", response.RespMessage, "warning");
                }
                else {
                    Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                }
                document.getElementById("savesystemorganizationid").disabled = false;
                document.getElementById("processingSpinner").style.display = "none";
                document.getElementById("buttonText").innerText = "SAVE";
                });
        }
      </script>
       @*End of saving Blogs *@


       <!-- Uttambsolutionsdisplayad -->
<ins class="adsbygoogle"
     style="display:block"
     data-ad-client="ca-pub-2850934153859537"
     data-ad-slot="1149686671"
     data-ad-format="auto"
     data-full-width-responsive="true"></ins>
<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>



 @*Scripts for loading system Jobs*@
 <script type="text/javascript">
    const pageSize = 4;
    let currentPage = 1;

    $(document).ready(function() {
        loadJobs(currentPage);

        $(document).on('click', '.page-link', function(e) {
            e.preventDefault();
            currentPage = $(this).data('page');
            loadJobs(currentPage);
        });
    });

    function loadJobs(page) {
        $.getJSON('@Url.Action("GetJobs", "Account")', { page: page, pageSize: pageSize })
        .done(function(data) {
            if (data && Array.isArray(data.items)) {
                renderJobs(data.items);
                updatePagination(data.pageIndex, data.totalPages);
            } else {
                console.error('Unexpected data format:', data);
            }
        })
        .fail(function(jqXHR, textStatus, errorThrown) {
            console.error('Error fetching data:', textStatus, errorThrown);
        });
    }

    function renderJobs(jobs) {
        let jobList = $('#job-list');
        jobList.empty();
        jobs.forEach(job => {
            jobList.append(`
                <div class="card mb-4 bg-light border-0 shadow-sm">
                    <a href="/Account/Jobdetails?JobId=${job.JobId}" class="text-decoration-none">
                        <div class="card-header bg-white">
                            <h4 class="fw-bold text-custom text-uppercase">${job.Title}</h4>
                            <h6 class="text-secondary text-uppercase">${job.Employername}</h6>
                            <div class="d-flex flex-wrap">
                                <span class="badge badge-secondary mr-2 mb-2"><strong>Location:</strong> ${job.Locationname}</span>
                                <span class="badge badge-secondary mr-2 mb-2"><strong>Type:</strong> ${job.Jobtypename}</span>
                                <span class="badge badge-secondary mr-2 mb-2"><strong>Salary Range:</strong> ${job.JobSalaryRange}</span>
                                <span class="badge badge-secondary mb-2"><strong>Job Function:</strong> ${job.Functionname}</span>
                            </div>
                            <hr />
                            <div class="d-flex justify-content-between mt-1">
                                <span class="badge bg-success">${job.JobStatus}</span>
                                <span class="text-muted">${job.DateCreated}</span>
                            </div>
                        </div>
                        <div class="card-body bg-white">
                            <div class="row">
                                <div class="col-md-2 col-sm-3 col-4">
                                    <div class="card card-border-custom">
                                        <img src="${job.Organizationlogo}" class="img-fluid rounded" alt="${job.Employername}" />
                                    </div>
                                </div>
                                <div class="col-md-10 col-sm-9 col-8">
                                    <p>${job.JobDescription}</p>
                                </div>
                            </div>
                        </div>
                    </a>
                    <div class="card-footer bg-white text-end">
                        <div class="d-flex justify-content-end">
                            <a href="https://twitter.com/intent/tweet?url=https://jobcenter.uttambsolutions.com/Home/Jobdetails?JobId=${job.JobId}" class="btn btn-xs btn-custom mr-2" target="_blank" rel="noopener noreferrer"><i class="fab fa-twitter"></i> Twitter</a>
                            <a href="https://www.facebook.com/sharer/sharer.php?u=https://jobcenter.uttambsolutions.com/Home/Jobdetails?JobId=${job.JobId}" class="btn btn-xs btn-custom mr-2" target="_blank" rel="noopener noreferrer"><i class="fab fa-facebook-f"></i> Facebook</a>
                            <a href="https://www.linkedin.com/shareArticle?mini=true&url=https://jobcenter.uttambsolutions.com/Home/Jobdetails?JobId=${job.JobId}" class="btn btn-xs btn-custom" target="_blank" rel="noopener noreferrer"><i class="fab fa-linkedin-in"></i> LinkedIn</a>
                        </div>
                    </div>
                </div>
            `);
        });
    }

    function updatePagination(currentPageIndex, totalPages) {
        let paginationControls = $('#pagination-controls');
        paginationControls.empty();

        if (currentPageIndex > 1) {
            paginationControls.append(`<li class="page-item"><a class="page-link" href="#" data-page="${currentPageIndex - 1}">Previous</a></li>`);
        }

        for (let i = 1; i <= totalPages; i++) {
            paginationControls.append(`
                <li class="page-item ${i === currentPageIndex ? 'active' : ''}">
                    <a class="page-link" href="#" data-page="${i}">${i}</a>
                </li>
            `);
        }

        if (currentPageIndex < totalPages) {
            paginationControls.append(`<li class="page-item"><a class="page-link" href="#" data-page="${currentPageIndex + 1}">Next</a></li>`);
        }
    }
</script>

</body>
</html>