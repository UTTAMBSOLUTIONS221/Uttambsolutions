@model DBL.Models.SystemPropertyHouseVacatingRequestModel
@{
    ViewData["Title"] = "Tenantvacatingrequests";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div class="row">
    <div class="col-sm-12">
        <div class="card card-outline card-info">
            <div class="card-header py-1">
                <div class="row">
                    <div class="col-sm-12">
                        <h6 class="font-weight-bold text-sm card-title">Property Rooms Vacating Requests</h6>
                    </div>
                </div>
            </div>
            <div class="card-body table-responsive table-responsive-sm">
                <table class="table table-bordered table-striped compact table-sm table-responsive-sm nowrap text-nowrap" id="AllsystemDataTables">
                    <thead>
                        <tr>
                            <th>Tenant</th>
                            <th>House</th>
                            <th>Expected Vacating Date</th>
                            <th>Planned Vacating Date</th>
                            <th>Vacating Reason</th>
                            <th>Status</th>
                            <th>Accepted</th>
                            <th>Date Created</th>
                            <th class="text-right">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Data != null)
                        {
                            foreach (var item in Model.Data)
                            {
                                <tr>
                                    <td>@item.SystemTenantName</td>
                                    <td>@item.SystemPropertyHouseSizeName</td>
                                    <td>@item.ExpectedVacatingDate.ToString("yyyy-MMM-dd")</td>
                                    <td>@item.PlannedVacatingDate.ToString("yyyy-MMM-dd")</td>
                                    <td>@item.VacatingReason</td>
                                    <td>@item.OccupationalStatus</td>
                                    <td>
                                        @if (item.VacatingStatus)
                                        {
                                            <p class="mb-0"><span class="badge badge-secondary custom-badge"><strong>Recieved</strong></span></p>
                                        }
                                        else
                                        {
                                            <p class="mb-0"><span class="badge badge-secondary custom-badge"><strong>Accepted</strong></span></p>
                                        }

                                    </td>
                                    <td>@item.DateCreated.ToString("yyyy-MMM-dd HH:mm")</td>
                                    <td class="text-right">
                                        @if (item.VacatingStatus)
                                        {
                                            <a onclick="acceptthisvacatingrequest(event)" data-Entryid="@item.VacatingRequestId" data-Systempropertyhousetenantid="@item.SystemPropertyHouseTenantId" data-Systempropertyhouseroomid="@item.SystemPropertyHouseRoomId" id="CAN_ACCEPT_VACATING_REQUEST" class="btn-info btn-xs btn-outline-info text-white font-weight-bold text-uppercase main">Accept</a>
                                        }
                                        else
                                        {
                                            <a href="#" class="btn-info btn-xs btn-outline-info text-white font-weight-bold text-uppercase main">Accepted</a>
                                        }
                                         </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
    function acceptthisvacatingrequest(event) {
        Swal.fire({
            title: "Are you sure you want to accept this?",
            text: "Accepting this allows you to make checks on the room for items to replace !",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, accept it!'
        }).then((result) => {
            if (result.isConfirmed) {
                var acceptRequestBtn = event.target;
                    var Entryid = acceptRequestBtn.getAttribute('data-Entryid');
                    var Systempropertyhousetenantid = acceptRequestBtn.getAttribute('data-Systempropertyhousetenantid');
                    var Systempropertyhouseroomid = acceptRequestBtn.getAttribute('data-Systempropertyhouseroomid');
                var uil =
                {
                        Entryid: Vacatingrequestid, Systempropertyhousetenantid: Systempropertyhousetenantid, Systempropertyhouseroomid: Systempropertyhouseroomid, Approvedby: $('#systemLoggedinedUserId').val(), Dateapproved: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' ')
                };
                    $.post("/PropertyHouse/Acceptthisvacatingrequest", uil, function (response) {
                    if (response.RespStatus == 0) {
                        Swal.fire('Item Activated!', 'Good.', 'success')
                        setTimeout(function () { location.reload(); }, 1000);
                    } else if (response.RespStatus == 1) {
                        Swal.fire("Oops!", response.RespMessage, "warning");
                    }
                    else {
                        Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                    }
                });
            } else {
                Swal.fire("Thank you!", "Accept once you are sure", "info");
            }
        });
    };
    </script>
}